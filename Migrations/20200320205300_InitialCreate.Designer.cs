// <auto-generated />
using System;
using CampRegistrationProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CampRegistrationProject.Migrations
{
    [DbContext(typeof(CampRegistrationProjectContext))]
    [Migration("20200320205300_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CampRegistrationProject.Models.Activities", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Game")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sport")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("CampRegistrationProject.Models.Campers", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Campers");
                });

            modelBuilder.Entity("CampRegistrationProject.Models.Enrollment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivitiesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampersID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MealsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Menu")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ActivitiesID");

                    b.HasIndex("CampersID");

                    b.HasIndex("MealsID");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("CampRegistrationProject.Models.Meals", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Menu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perday")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("CampRegistrationProject.Models.Enrollment", b =>
                {
                    b.HasOne("CampRegistrationProject.Models.Activities", "Activities")
                        .WithMany("Enrollments")
                        .HasForeignKey("ActivitiesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampRegistrationProject.Models.Campers", "Campers")
                        .WithMany("Enrollments")
                        .HasForeignKey("CampersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampRegistrationProject.Models.Meals", "Meals")
                        .WithMany("Enrollments")
                        .HasForeignKey("MealsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
